<?php

namespace Core\ProductBundle\Entity;

use Doctrine\ORM\EntityRepository;

/**
 * ProductVariationRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class ProductVariationRepository extends EntityRepository
{
    public function getProductVariationsQueryBuilder($product = null)
    {
        $querybuilder = $this->getEntityManager()->createQueryBuilder()
                ->select("pv, po, an, av")
                ->from("CoreProductBundle:ProductVariation", "pv")
                ->join("pv.options", "po")
                ->leftJoin("po.name", "an")
                ->leftJoin("po.value", "av")
                ;
        $querybuilder->addOrderBy("pv.variation", "asc");
        $querybuilder->addOrderBy("pv.id", "asc");

        if ($product !== null) {
            $querybuilder->andWhere('pv.product = :pid')
                ->setParameter("pid", $product);
        }

        return $querybuilder;
    }

    public function getProductVariationsCount($product = null)
    {
        $querybuilder = $this->getEntityManager()->createQueryBuilder()
                ->select("count(pv.id)")
                ->from("CoreProductBundle:ProductVariation", "pv")
                ->andWhere('pv.product = :pid')
                ->setParameter("pid", $product);

        return $querybuilder->getQuery()->getSingleScalarResult();
    }

    public function getProductVariationsQuery($product = null)
    {
        return $this->getProductVariationsQueryBuilder($product)->getQuery();
    }

    public function getProductVariations($product = null)
    {
        return $this->getProductVariationsQuery($product)->getResult();
    }

    public function getGroupedVariationsByProducts($productIds = array(), $locale = null)
    {
        $querybuilder =  $this->getProductVariationsQueryBuilder();
        $querybuilder
            ->select("an.name, av.value, po.amount, an.id as attribute, pv.amount, pv.variation as variation, p.id as product,an.id")
            ->resetDqlPart('join')
            ->join("pv.options", "po")
            ->leftJoin("po.name", "an")
            ->leftJoin("po.value", "av")
            ->leftJoin("pv.product", 'p')
            ->addOrderBy("p.id")
            ->addOrderBy("an.name")
            ->addOrderBy("av.value");

        if (!empty($productIds)) {
            $expr = $querybuilder->expr()->in('n.product', $productIds);
            $querybuilder->andWhere($expr);
        }
        $query = $this->getEntityManager()->getRepository("CoreProductBundle:ProductOption")->setHint($querybuilder->getQuery(), $locale);
        $iterator = $query->getArrayResult();

        $result = array();
        foreach ($iterator as $key => $entity) {
           $result[$entity['product']][$entity['variation']][$entity['name']] = $entity;
        }

        return $result;
    }
}
